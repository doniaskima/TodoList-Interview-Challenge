{
  "extends": [
    // By extending from a plugin config, we can get recommended rules without having to add them manually.
    "eslint:recommended",
    "plugin:react/recommended",
    "plugin:import/recommended",
    "plugin:jsx-a11y/recommended",
    "plugin:@typescript-eslint/recommended",
    // This disables the formatting rules in ESLint that Prettier is going to be responsible for handling.
    // Make sure it's always the last config, so it gets the chance to override other configs.
    "eslint-config-prettier"
  ],
  "plugins": ["simple-import-sort"],
  "settings": {
    "react": {
      // Tells eslint-plugin-react to automatically detect the version of React to use.
      "version": "detect"
    },
    // Tells eslint how to resolve imports
    "import/resolver": {
      "node": {
        "paths": ["src"],
        "extensions": [".js", ".jsx", ".ts", ".tsx"]
      },
      "typescript": {
        "alwaysTryTypes": true,
        "project": "./tsconfig.json"
      }
    }
  },
  "rules": {
    "react/react-in-jsx-scope": "off",
    "react/prop-types": "off", // using typescript
    "import/named": "off", // https://github.com/typescript-eslint/typescript-eslint/issues/154#issuecomment-547567531
    "simple-import-sort/exports": "warn",
    "simple-import-sort/imports": "warn",
    // Project is full of these "errors", so we're going to disable them for now.
    "@typescript-eslint/no-non-null-asserted-optional-chain": "warn",
    "@typescript-eslint/no-empty-function": "off",
    "@typescript-eslint/no-non-null-assertion": "off",
    "jsx-a11y/no-noninteractive-element-interactions": "warn",
    "jsx-a11y/media-has-caption": "warn",
    "jsx-a11y/no-static-element-interactions": "off",
    "jsx-a11y/click-events-have-key-events": "off",
    "import/no-named-as-default-member": "off"
  },
  "overrides": [
    {
      
      "rules": {
        "import/no-anonymous-default-export": "off"
      }
    }
  ],
  "ignores": ["*.test.ts", "node_modules/", "dist/", ".prettierrc.js", ".eslintrc.js", "env.d.ts", "src/generated"]

}
